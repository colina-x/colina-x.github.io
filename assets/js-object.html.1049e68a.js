import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c,f as t,a as d,e as p}from"./app.dfbe4c07.js";const r={},_=d("p",null,"JavaScirpt 中万物皆对象，可以分为三种：实例对象，函数对象，原型对象。...",-1),n=p("<p>所有的对象都有<code>__proto__</code>属性。 只有函数对象拥有<code>prototype</code>属性。 只有原型对象拥有<code>constructor</code>属性。</p><p>通过<code>function colina(){}</code>来创建一个函数对象colina。 通过<code>var a = new colina()</code>来创建一个实例对象。</p><p>函数对象创建时自动产生对应的原型对象。 创建时，函数对象的<code>prototype</code>指向其原型对象， 函数对象对应的原型对象的<code>constructor</code>指向该函数对象。 a的<code>__proto__</code>指向对应的原型对象（即colina的prototype）。</p><p>js中本身存在两个函数对象: Function和Object 和其对应的两个原型对象:<code>Function.prototype</code>和<code>Object.prototype</code> 所有函数对象的<code>__proto__</code>指向Function的原型对象（即<code>Function.prototype</code>） 所有原型对象的<code>__proto__</code>指向Object的原型对象（即<code>Object.prototype</code>）， 除了<code>Object.prototype</code>本身（为null）。</p><p>在查找一个对象的属性时，js先查找本身，找不到就顺着<code>__proto__</code>往上找，直到null。</p>",5);function a(s,i){return e(),c("div",null,[_,t(" more "),n])}const j=o(r,[["render",a],["__file","js-object.html.vue"]]);export{j as default};
